{
    "analysis_tasks": [
        {
            "task": "FiducialCorrelationWarp",
            "module": "merlin.analysis.warp",
            "parameters": {
                "highpass_sigma": 10,
                "write_fiducial_images": true
            }
        },
        {
            "task": "DeconvolutionPreprocess",
            "module": "merlin.analysis.preprocess",
            "parameters": {
	        "warp_task": "FiducialCorrelationWarp",
            }
        },
        {
            "task": "OptimizeIteration",
            "module": "merlin.analysis.optimize",
            "analysis_name": "Optimize1",
            "parameters": {
                "preprocess_task": "DeconvolutionPreprocess",
                "warp_task": "FiducialCorrelationWarp",
                "area_threshold": 4,
		"fov_index" : [[0, 1]],	
                "optimize_chromatic_correction": true
            }
        },
        {
            "task": "OptimizeIteration",
            "module": "merlin.analysis.optimize",
            "analysis_name": "Optimize2",
            "parameters": {
                "preprocess_task": "DeconvolutionPreprocess",
                "warp_task": "FiducialCorrelationWarp",
                "area_threshold": 4,
		"fov_index" : [[0, 1]],
                "previous_iteration": "Optimize1",
                "optimize_chromatic_correction": true
            }
        },
        {
            "task": "OptimizeIteration",
            "module": "merlin.analysis.optimize",
            "analysis_name": "Optimize3",
            "parameters": {
                "preprocess_task": "DeconvolutionPreprocess",
                "warp_task": "FiducialCorrelationWarp",
                "area_threshold": 4,
		"fov_index" : [[0, 1]],
                "previous_iteration": "Optimize2",
                "optimize_chromatic_correction": true
            }
        },
        {
            "task": "Decode",
            "module": "merlin.analysis.decode",
            "parameters": {
                "preprocess_task": "DeconvolutionPreprocess",
                "optimize_task": "Optimize3",
                "global_align_task": "SimpleGlobalAlignment",
                "minimum_area": 1,
                "crop_width": 10,
                "distance_threshold":0.65
            }
        },
        {
            "task": "SimpleGlobalAlignment",
            "module": "merlin.analysis.globalalign"
        },
        {
            "task": "GenerateMosaic",
            "module": "merlin.analysis.generatemosaic",
            "parameters": {
                "global_align_task": "SimpleGlobalAlignment",
                "warp_task": "FiducialCorrelationWarp"
            }
        },
        {
            "task": "GenerateAdaptiveThreshold",
            "module": "merlin.analysis.filterbarcodes",
            "parameters": {
                "decode_task": "Decode",
                "run_after_task": "Decode"
            }
        },
        {
            "task": "AdaptiveFilterBarcodes",
            "module": "merlin.analysis.filterbarcodes",
            "parameters": {
                "decode_task": "Decode",
                "adaptive_task": "GenerateAdaptiveThreshold"
            }
        },
        {
            "task": "ExportBarcodes",
            "module": "merlin.analysis.exportbarcodes",
            "parameters": {
                "filter_task": "AdaptiveFilterBarcodes"
            }
        },
        {
            "task": "WatershedSegment",
            "module": "merlin.analysis.segment",
            "parameters": {
                "warp_task": "FiducialCorrelationWarp",
                "global_align_task": "SimpleGlobalAlignment"
            }
        },
        {
            "task": "CleanCellBoundaries",
            "module": "merlin.analysis.segment",
            "parameters": {
                "segment_task": "WatershedSegment",
                "global_align_task": "SimpleGlobalAlignment"
            }
        },
        {
            "task": "CombineCleanedBoundaries",
            "module": "merlin.analysis.segment",
            "parameters": {
                "cleaning_task": "CleanCellBoundaries"
            }
        },
        {
            "task": "RefineCellDatabases",
            "module": "merlin.analysis.segment",
            "parameters": {
                "segment_task": "WatershedSegment",
                "combine_cleaning_task": "CombineCleanedBoundaries"
            }
        },        
        {
            "task": "PartitionBarcodes",
            "module": "merlin.analysis.partition",
            "parameters": {
                "filter_task": "AdaptiveFilterBarcodes",
                "assignment_task": "RefineCellDatabases",
                "alignment_task": "SimpleGlobalAlignment"
            }
        },
        {
            "task": "ExportPartitionedBarcodes",
            "module": "merlin.analysis.partition",
            "parameters": {
                "partition_task": "PartitionBarcodes"
            }
        },
        {
            "task": "ExportCellMetadata",
            "module": "merlin.analysis.segment",
            "parameters": {
                "segment_task": "RefineCellDatabases"
            }
        },
        {
            "task": "SumSignal",
            "module": "merlin.analysis.sequential",
            "parameters": {
                "z_index": 0,
                "apply_highpass": false,
                "warp_task": "FiducialCorrelationWarp",
                "highpass_sigma": 5,
                "segment_task": "RefineCellDatabases",
                "global_align_task": "SimpleGlobalAlignment"
            }
        },
        {
            "task": "ExportSumSignals",
            "module": "merlin.analysis.sequential",
            "parameters": {
                "sequential_task": "SumSignal"
            }
        }

    ]

}
